abstract type AbstractContextualColor end

struct ContextualColor{T} <: AbstractContextualColor
    neutral_color::T
    hot_color::T
    active_color::T
end

# default colors
const COLOR_DEFAULT_BACKGROUND = ContextualColor(0x00cccccc, 0x00cccccc, 0x00cccccc)
const COLOR_DEFAULT_BORDER = ContextualColor(0x00000000, 0x00000000, 0x00000000)
const COLOR_DEFAULT_TEXT = ContextualColor(0x00000000, 0x00000000, 0x00000000)
const COLOR_DEFAULT_INDICATOR = ContextualColor(0x00000000, 0x00000000, 0x00000000)

# Button
const COLOR_BUTTON_BACKGROUND = ContextualColor(0x00b0b0b0, 0x00bfbfbf, 0x00c0c0c0)
const COLOR_BUTTON_BORDER = COLOR_DEFAULT_BORDER
const COLOR_BUTTON_TEXT = COLOR_DEFAULT_TEXT

# TextBox
const COLOR_TEXT_BOX_BACKGROUND = ContextualColor(0x00ffffff, 0x00ffffff, 0x00ffffff)
const COLOR_TEXT_BOX_BORDER = COLOR_DEFAULT_BORDER
const COLOR_TEXT_BOX_TEXT = COLOR_DEFAULT_TEXT

# Text
const COLOR_TEXT_BACKGROUND = COLOR_DEFAULT_BACKGROUND
const COLOR_TEXT_BORDER = COLOR_DEFAULT_BACKGROUND
const COLOR_TEXT_TEXT = COLOR_DEFAULT_TEXT

# CheckBox
const COLOR_CHECK_BOX_BACKGROUND = COLOR_DEFAULT_BACKGROUND
const COLOR_CHECK_BOX_BORDER = COLOR_DEFAULT_BACKGROUND
const COLOR_CHECK_BOX_TEXT = COLOR_DEFAULT_TEXT
const COLOR_CHECK_BOX_INDICATOR = COLOR_DEFAULT_INDICATOR

# RadioButton
const COLOR_RADIO_BUTTON_BACKGROUND = COLOR_DEFAULT_BACKGROUND
const COLOR_RADIO_BUTTON_BORDER = COLOR_DEFAULT_BACKGROUND
const COLOR_RADIO_BUTTON_TEXT = COLOR_DEFAULT_TEXT
const COLOR_RADIO_BUTTON_INDICATOR = COLOR_DEFAULT_INDICATOR

# DropDown
const COLOR_DROP_DOWN_BACKGROUND = COLOR_DEFAULT_BACKGROUND
const COLOR_DROP_DOWN_BORDER = COLOR_DEFAULT_BACKGROUND
const COLOR_DROP_DOWN_TEXT = COLOR_DEFAULT_TEXT
const COLOR_DROP_DOWN_INDICATOR = COLOR_DEFAULT_INDICATOR

# Slider
const COLOR_SLIDER_BACKGROUND = ContextualColor(0x00b0b0b0, 0x00b7b7b7, 0x00c0c0c0)
const COLOR_SLIDER_BORDER = COLOR_DEFAULT_BORDER
const COLOR_SLIDER_INDICATOR = COLOR_DEFAULT_INDICATOR

# Image
const COLOR_IMAGE_BORDER = COLOR_DEFAULT_BORDER

get_colors(widget_type::Button) = (COLOR_BUTTON_BACKGROUND, COLOR_BUTTON_BORDER, COLOR_BUTTON_TEXT)
get_colors(widget_type::TextBox) = (COLOR_TEXT_BOX_BACKGROUND, COLOR_TEXT_BOX_BORDER, COLOR_TEXT_BOX_TEXT)
get_colors(widget_type::Text) = (COLOR_TEXT_BACKGROUND, COLOR_TEXT_BORDER, COLOR_TEXT_TEXT)
get_colors(widget_type::CheckBox) = (COLOR_CHECK_BOX_BACKGROUND, COLOR_CHECK_BOX_BORDER, COLOR_CHECK_BOX_TEXT, COLOR_CHECK_BOX_INDICATOR)
get_colors(widget_type::RadioButton) = (COLOR_RADIO_BUTTON_BACKGROUND, COLOR_RADIO_BUTTON_BORDER, COLOR_RADIO_BUTTON_TEXT, COLOR_RADIO_BUTTON_INDICATOR)
get_colors(widget_type::DropDown) = (COLOR_DROP_DOWN_BACKGROUND, COLOR_DROP_DOWN_BORDER, COLOR_DROP_DOWN_TEXT, COLOR_DROP_DOWN_INDICATOR)
get_colors(widget_type::Slider) = (COLOR_SLIDER_BACKGROUND, COLOR_SLIDER_BORDER, COLOR_SLIDER_INDICATOR)
get_colors(widget_type::Image) = (COLOR_IMAGE_BORDER,)



const DEFAULT_COLORS = Dict{Symbol, UInt32}()

DEFAULT_COLORS[:BACKGROUND] = 0x00cccccc
DEFAULT_COLORS[:BORDER] = 0x00000000
DEFAULT_COLORS[:TEXT] = 0x00000000
DEFAULT_COLORS[:INDICATOR] = 0x00000000

# Button
DEFAULT_COLORS[:BUTTON_BACKGROUND_NEUTRAL] = 0x00b0b0b0
DEFAULT_COLORS[:BUTTON_BACKGROUND_HOT] = 0x00bfbfbf
DEFAULT_COLORS[:BUTTON_BACKGROUND_ACTIVE] = 0x00c0c0c0

DEFAULT_COLORS[:BUTTON_BORDER_NEUTRAL] = DEFAULT_COLORS[:BORDER]
DEFAULT_COLORS[:BUTTON_BORDER_HOT] = DEFAULT_COLORS[:BORDER]
DEFAULT_COLORS[:BUTTON_BORDER_ACTIVE] = DEFAULT_COLORS[:BORDER]

DEFAULT_COLORS[:BUTTON_TEXT_NEUTRAL] = DEFAULT_COLORS[:TEXT]
DEFAULT_COLORS[:BUTTON_TEXT_HOT] = DEFAULT_COLORS[:TEXT]
DEFAULT_COLORS[:BUTTON_TEXT_ACTIVE] = DEFAULT_COLORS[:TEXT]

# TextBox
DEFAULT_COLORS[:TEXT_BOX_BACKGROUND_NEUTRAL] = 0x00ffffff
DEFAULT_COLORS[:TEXT_BOX_BACKGROUND_HOT] = 0x00ffffff
DEFAULT_COLORS[:TEXT_BOX_BACKGROUND_ACTIVE] = 0x00ffffff

DEFAULT_COLORS[:TEXT_BOX_BORDER_NEUTRAL] = DEFAULT_COLORS[:BORDER]
DEFAULT_COLORS[:TEXT_BOX_BORDER_HOT] = DEFAULT_COLORS[:BORDER]
DEFAULT_COLORS[:TEXT_BOX_BORDER_ACTIVE] = DEFAULT_COLORS[:BORDER]

DEFAULT_COLORS[:TEXT_BOX_TEXT_NEUTRAL] = DEFAULT_COLORS[:TEXT]
DEFAULT_COLORS[:TEXT_BOX_TEXT_HOT] = DEFAULT_COLORS[:TEXT]
DEFAULT_COLORS[:TEXT_BOX_TEXT_ACTIVE] = DEFAULT_COLORS[:TEXT]

# Text
DEFAULT_COLORS[:TEXT_BACKGROUND_NEUTRAL] = DEFAULT_COLORS[:BACKGROUND]
DEFAULT_COLORS[:TEXT_BACKGROUND_HOT] = DEFAULT_COLORS[:BACKGROUND]
DEFAULT_COLORS[:TEXT_BACKGROUND_ACTIVE] = DEFAULT_COLORS[:BACKGROUND]

DEFAULT_COLORS[:TEXT_BORDER_NEUTRAL] = DEFAULT_COLORS[:BACKGROUND]
DEFAULT_COLORS[:TEXT_BORDER_HOT] = DEFAULT_COLORS[:BACKGROUND]
DEFAULT_COLORS[:TEXT_BORDER_ACTIVE] = DEFAULT_COLORS[:BACKGROUND]

DEFAULT_COLORS[:TEXT_TEXT_NEUTRAL] = DEFAULT_COLORS[:TEXT]
DEFAULT_COLORS[:TEXT_TEXT_HOT] = DEFAULT_COLORS[:TEXT]
DEFAULT_COLORS[:TEXT_TEXT_ACTIVE] = DEFAULT_COLORS[:TEXT]

# CheckBox
DEFAULT_COLORS[:CHECK_BOX_BACKGROUND_NEUTRAL] = DEFAULT_COLORS[:BACKGROUND]
DEFAULT_COLORS[:CHECK_BOX_BACKGROUND_HOT] = DEFAULT_COLORS[:BACKGROUND]
DEFAULT_COLORS[:CHECK_BOX_BACKGROUND_ACTIVE] = DEFAULT_COLORS[:BACKGROUND]

DEFAULT_COLORS[:CHECK_BOX_BORDER_NEUTRAL] = DEFAULT_COLORS[:BACKGROUND]
DEFAULT_COLORS[:CHECK_BOX_BORDER_HOT] = DEFAULT_COLORS[:BACKGROUND]
DEFAULT_COLORS[:CHECK_BOX_BORDER_ACTIVE] = DEFAULT_COLORS[:BACKGROUND]

DEFAULT_COLORS[:CHECK_BOX_TEXT_NEUTRAL] = DEFAULT_COLORS[:TEXT]
DEFAULT_COLORS[:CHECK_BOX_TEXT_HOT] = DEFAULT_COLORS[:TEXT]
DEFAULT_COLORS[:CHECK_BOX_TEXT_ACTIVE] = DEFAULT_COLORS[:TEXT]

DEFAULT_COLORS[:CHECK_BOX_INDICATOR_NEUTRAL] = DEFAULT_COLORS[:INDICATOR]
DEFAULT_COLORS[:CHECK_BOX_INDICATOR_HOT] = DEFAULT_COLORS[:INDICATOR]
DEFAULT_COLORS[:CHECK_BOX_INDICATOR_ACTIVE] = DEFAULT_COLORS[:INDICATOR]

# RadioButton
DEFAULT_COLORS[:RADIO_BUTTON_BACKGROUND_NEUTRAL] = DEFAULT_COLORS[:BACKGROUND]
DEFAULT_COLORS[:RADIO_BUTTON_BACKGROUND_HOT] = DEFAULT_COLORS[:BACKGROUND]
DEFAULT_COLORS[:RADIO_BUTTON_BACKGROUND_ACTIVE] = DEFAULT_COLORS[:BACKGROUND]

DEFAULT_COLORS[:RADIO_BUTTON_BORDER_NEUTRAL] = DEFAULT_COLORS[:BACKGROUND]
DEFAULT_COLORS[:RADIO_BUTTON_BORDER_HOT] = DEFAULT_COLORS[:BACKGROUND]
DEFAULT_COLORS[:RADIO_BUTTON_BORDER_ACTIVE] = DEFAULT_COLORS[:BACKGROUND]

DEFAULT_COLORS[:RADIO_BUTTON_TEXT_NEUTRAL] = DEFAULT_COLORS[:TEXT]
DEFAULT_COLORS[:RADIO_BUTTON_TEXT_HOT] = DEFAULT_COLORS[:TEXT]
DEFAULT_COLORS[:RADIO_BUTTON_TEXT_ACTIVE] = DEFAULT_COLORS[:TEXT]

DEFAULT_COLORS[:RADIO_BUTTON_INDICATOR_NEUTRAL] = DEFAULT_COLORS[:INDICATOR]
DEFAULT_COLORS[:RADIO_BUTTON_INDICATOR_HOT] = DEFAULT_COLORS[:INDICATOR]
DEFAULT_COLORS[:RADIO_BUTTON_INDICATOR_ACTIVE] = DEFAULT_COLORS[:INDICATOR]

# DropDown
DEFAULT_COLORS[:DROP_DOWN_BACKGROUND_NEUTRAL] = DEFAULT_COLORS[:BACKGROUND]
DEFAULT_COLORS[:DROP_DOWN_BACKGROUND_HOT] = DEFAULT_COLORS[:BACKGROUND]
DEFAULT_COLORS[:DROP_DOWN_BACKGROUND_ACTIVE] = DEFAULT_COLORS[:BACKGROUND]

DEFAULT_COLORS[:DROP_DOWN_BORDER_NEUTRAL] = DEFAULT_COLORS[:BACKGROUND]
DEFAULT_COLORS[:DROP_DOWN_BORDER_HOT] = DEFAULT_COLORS[:BACKGROUND]
DEFAULT_COLORS[:DROP_DOWN_BORDER_ACTIVE] = DEFAULT_COLORS[:BACKGROUND]

DEFAULT_COLORS[:DROP_DOWN_TEXT_NEUTRAL] = DEFAULT_COLORS[:TEXT]
DEFAULT_COLORS[:DROP_DOWN_TEXT_HOT] = DEFAULT_COLORS[:TEXT]
DEFAULT_COLORS[:DROP_DOWN_TEXT_ACTIVE] = DEFAULT_COLORS[:TEXT]

DEFAULT_COLORS[:DROP_DOWN_INDICATOR_NEUTRAL] = DEFAULT_COLORS[:INDICATOR]
DEFAULT_COLORS[:DROP_DOWN_INDICATOR_HOT] = DEFAULT_COLORS[:INDICATOR]
DEFAULT_COLORS[:DROP_DOWN_INDICATOR_ACTIVE] = DEFAULT_COLORS[:INDICATOR]

# Slider
DEFAULT_COLORS[:SLIDER_BACKGROUND_NEUTRAL] = DEFAULT_COLORS[:BUTTON_BACKGROUND_NEUTRAL]
DEFAULT_COLORS[:SLIDER_BACKGROUND_HOT] = DEFAULT_COLORS[:BUTTON_BACKGROUND_HOT]
DEFAULT_COLORS[:SLIDER_BACKGROUND_ACTIVE] = DEFAULT_COLORS[:BUTTON_BACKGROUND_ACTIVE]

DEFAULT_COLORS[:SLIDER_BORDER_NEUTRAL] = DEFAULT_COLORS[:BORDER]
DEFAULT_COLORS[:SLIDER_BORDER_HOT] = DEFAULT_COLORS[:BORDER]
DEFAULT_COLORS[:SLIDER_BORDER_ACTIVE] = DEFAULT_COLORS[:BORDER]

DEFAULT_COLORS[:SLIDER_INDICATOR_NEUTRAL] = DEFAULT_COLORS[:INDICATOR]
DEFAULT_COLORS[:SLIDER_INDICATOR_HOT] = DEFAULT_COLORS[:INDICATOR]
DEFAULT_COLORS[:SLIDER_INDICATOR_ACTIVE] = DEFAULT_COLORS[:INDICATOR]

# Image
DEFAULT_COLORS[:IMAGE_BORDER_NEUTRAL] = DEFAULT_COLORS[:BORDER]
DEFAULT_COLORS[:IMAGE_BORDER_HOT] = DEFAULT_COLORS[:BORDER]
DEFAULT_COLORS[:IMAGE_BORDER_ACTIVE] = DEFAULT_COLORS[:BORDER]

function get_contextual_color(user_interaction_state, this_widget, neutral_color, hot_color, active_color)
    if this_widget == user_interaction_state.active_widget
        return active_color
    elseif this_widget == user_interaction_state.hot_widget
        return hot_color
    else
        return neutral_color
    end
end
