import ColorTypes as CT
import Colors
import FixedPointNumbers as FPN
import SimpleIMGUI as SI

struct BinaryTransparentColor{C}
    color::C
end

const COLORS = Vector{BinaryTransparentColor{CT.RGBA{FPN.N0f8}}}(undef, length(instances(SI.ColorIndex)))

COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)] = BinaryTransparentColor(CT.RGBA{FPN.N0f8}((Colors.color_names["lightgray"] ./ 255)...,))
COLORS[Integer(SI.COLOR_INDEX_BORDER)] = BinaryTransparentColor(CT.RGBA{FPN.N0f8}((Colors.color_names["black"] ./ 255)...,))
COLORS[Integer(SI.COLOR_INDEX_TEXT)] = BinaryTransparentColor(CT.RGBA{FPN.N0f8}((Colors.color_names["black"] ./ 255)...,))
COLORS[Integer(SI.COLOR_INDEX_INDICATOR)] = BinaryTransparentColor(CT.RGBA{FPN.N0f8}((Colors.color_names["black"] ./ 255)..., 0.5))

# Button
COLORS[Integer(SI.COLOR_INDEX_BUTTON_BACKGROUND_NEUTRAL)] = BinaryTransparentColor(CT.RGBA{FPN.N0f8}((Colors.color_names["gray69"] ./ 255)...,))
COLORS[Integer(SI.COLOR_INDEX_BUTTON_BACKGROUND_HOT)] = BinaryTransparentColor(CT.RGBA{FPN.N0f8}((Colors.color_names["gray75"] ./ 255)...,))
COLORS[Integer(SI.COLOR_INDEX_BUTTON_BACKGROUND_ACTIVE)] = BinaryTransparentColor(CT.RGBA{FPN.N0f8}((Colors.color_names["gray75"] ./ 255)...,))

COLORS[Integer(SI.COLOR_INDEX_BUTTON_BORDER_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_BORDER)]
COLORS[Integer(SI.COLOR_INDEX_BUTTON_BORDER_HOT)] = COLORS[Integer(SI.COLOR_INDEX_BORDER)]
COLORS[Integer(SI.COLOR_INDEX_BUTTON_BORDER_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_BORDER)]

COLORS[Integer(SI.COLOR_INDEX_BUTTON_TEXT_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]
COLORS[Integer(SI.COLOR_INDEX_BUTTON_TEXT_HOT)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]
COLORS[Integer(SI.COLOR_INDEX_BUTTON_TEXT_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]

# TextBox
COLORS[Integer(SI.COLOR_INDEX_TEXT_BOX_BACKGROUND_NEUTRAL)] = BinaryTransparentColor(CT.RGBA{FPN.N0f8}((Colors.color_names["white"] ./ 255)...,))
COLORS[Integer(SI.COLOR_INDEX_TEXT_BOX_BACKGROUND_HOT)] = BinaryTransparentColor(CT.RGBA{FPN.N0f8}((Colors.color_names["white"] ./ 255)...,))
COLORS[Integer(SI.COLOR_INDEX_TEXT_BOX_BACKGROUND_ACTIVE)] = BinaryTransparentColor(CT.RGBA{FPN.N0f8}((Colors.color_names["white"] ./ 255)...,))

COLORS[Integer(SI.COLOR_INDEX_TEXT_BOX_BORDER_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_BORDER)]
COLORS[Integer(SI.COLOR_INDEX_TEXT_BOX_BORDER_HOT)] = COLORS[Integer(SI.COLOR_INDEX_BORDER)]
COLORS[Integer(SI.COLOR_INDEX_TEXT_BOX_BORDER_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_BORDER)]

COLORS[Integer(SI.COLOR_INDEX_TEXT_BOX_TEXT_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]
COLORS[Integer(SI.COLOR_INDEX_TEXT_BOX_TEXT_HOT)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]
COLORS[Integer(SI.COLOR_INDEX_TEXT_BOX_TEXT_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]

# Text
COLORS[Integer(SI.COLOR_INDEX_TEXT_BACKGROUND_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]
COLORS[Integer(SI.COLOR_INDEX_TEXT_BACKGROUND_HOT)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]
COLORS[Integer(SI.COLOR_INDEX_TEXT_BACKGROUND_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]

COLORS[Integer(SI.COLOR_INDEX_TEXT_BORDER_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]
COLORS[Integer(SI.COLOR_INDEX_TEXT_BORDER_HOT)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]
COLORS[Integer(SI.COLOR_INDEX_TEXT_BORDER_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]

COLORS[Integer(SI.COLOR_INDEX_TEXT_TEXT_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]
COLORS[Integer(SI.COLOR_INDEX_TEXT_TEXT_HOT)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]
COLORS[Integer(SI.COLOR_INDEX_TEXT_TEXT_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]

# CheckBox
COLORS[Integer(SI.COLOR_INDEX_CHECK_BOX_BACKGROUND_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]
COLORS[Integer(SI.COLOR_INDEX_CHECK_BOX_BACKGROUND_HOT)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]
COLORS[Integer(SI.COLOR_INDEX_CHECK_BOX_BACKGROUND_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]

COLORS[Integer(SI.COLOR_INDEX_CHECK_BOX_BORDER_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]
COLORS[Integer(SI.COLOR_INDEX_CHECK_BOX_BORDER_HOT)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]
COLORS[Integer(SI.COLOR_INDEX_CHECK_BOX_BORDER_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]

COLORS[Integer(SI.COLOR_INDEX_CHECK_BOX_TEXT_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]
COLORS[Integer(SI.COLOR_INDEX_CHECK_BOX_TEXT_HOT)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]
COLORS[Integer(SI.COLOR_INDEX_CHECK_BOX_TEXT_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]

COLORS[Integer(SI.COLOR_INDEX_CHECK_BOX_INDICATOR_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_INDICATOR)]
COLORS[Integer(SI.COLOR_INDEX_CHECK_BOX_INDICATOR_HOT)] = COLORS[Integer(SI.COLOR_INDEX_INDICATOR)]
COLORS[Integer(SI.COLOR_INDEX_CHECK_BOX_INDICATOR_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_INDICATOR)]

# RadioButtonList
COLORS[Integer(SI.COLOR_INDEX_RADIO_BUTTON_LIST_BACKGROUND_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]
COLORS[Integer(SI.COLOR_INDEX_RADIO_BUTTON_LIST_BACKGROUND_HOT)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]
COLORS[Integer(SI.COLOR_INDEX_RADIO_BUTTON_LIST_BACKGROUND_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]

COLORS[Integer(SI.COLOR_INDEX_RADIO_BUTTON_LIST_BORDER_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]
COLORS[Integer(SI.COLOR_INDEX_RADIO_BUTTON_LIST_BORDER_HOT)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]
COLORS[Integer(SI.COLOR_INDEX_RADIO_BUTTON_LIST_BORDER_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]

COLORS[Integer(SI.COLOR_INDEX_RADIO_BUTTON_LIST_TEXT_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]
COLORS[Integer(SI.COLOR_INDEX_RADIO_BUTTON_LIST_TEXT_HOT)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]
COLORS[Integer(SI.COLOR_INDEX_RADIO_BUTTON_LIST_TEXT_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]

COLORS[Integer(SI.COLOR_INDEX_RADIO_BUTTON_LIST_INDICATOR_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_INDICATOR)]
COLORS[Integer(SI.COLOR_INDEX_RADIO_BUTTON_LIST_INDICATOR_HOT)] = COLORS[Integer(SI.COLOR_INDEX_INDICATOR)]
COLORS[Integer(SI.COLOR_INDEX_RADIO_BUTTON_LIST_INDICATOR_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_INDICATOR)]

# DropDown
COLORS[Integer(SI.COLOR_INDEX_DROP_DOWN_BACKGROUND_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]
COLORS[Integer(SI.COLOR_INDEX_DROP_DOWN_BACKGROUND_HOT)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]
COLORS[Integer(SI.COLOR_INDEX_DROP_DOWN_BACKGROUND_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]

COLORS[Integer(SI.COLOR_INDEX_DROP_DOWN_BORDER_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]
COLORS[Integer(SI.COLOR_INDEX_DROP_DOWN_BORDER_HOT)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]
COLORS[Integer(SI.COLOR_INDEX_DROP_DOWN_BORDER_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_BACKGROUND)]

COLORS[Integer(SI.COLOR_INDEX_DROP_DOWN_TEXT_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]
COLORS[Integer(SI.COLOR_INDEX_DROP_DOWN_TEXT_HOT)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]
COLORS[Integer(SI.COLOR_INDEX_DROP_DOWN_TEXT_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]

COLORS[Integer(SI.COLOR_INDEX_DROP_DOWN_INDICATOR_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_INDICATOR)]
COLORS[Integer(SI.COLOR_INDEX_DROP_DOWN_INDICATOR_HOT)] = COLORS[Integer(SI.COLOR_INDEX_INDICATOR)]
COLORS[Integer(SI.COLOR_INDEX_DROP_DOWN_INDICATOR_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_INDICATOR)]

# Slider
COLORS[Integer(SI.COLOR_INDEX_SLIDER_BACKGROUND_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_BUTTON_BACKGROUND_NEUTRAL)]
COLORS[Integer(SI.COLOR_INDEX_SLIDER_BACKGROUND_HOT)] = COLORS[Integer(SI.COLOR_INDEX_BUTTON_BACKGROUND_HOT)]
COLORS[Integer(SI.COLOR_INDEX_SLIDER_BACKGROUND_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_BUTTON_BACKGROUND_ACTIVE)]

COLORS[Integer(SI.COLOR_INDEX_SLIDER_BORDER_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_BORDER)]
COLORS[Integer(SI.COLOR_INDEX_SLIDER_BORDER_HOT)] = COLORS[Integer(SI.COLOR_INDEX_BORDER)]
COLORS[Integer(SI.COLOR_INDEX_SLIDER_BORDER_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_BORDER)]

COLORS[Integer(SI.COLOR_INDEX_SLIDER_TEXT_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]
COLORS[Integer(SI.COLOR_INDEX_SLIDER_TEXT_HOT)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]
COLORS[Integer(SI.COLOR_INDEX_SLIDER_TEXT_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_TEXT)]

COLORS[Integer(SI.COLOR_INDEX_SLIDER_INDICATOR_NEUTRAL)] = BinaryTransparentColor(CT.RGBA{FPN.N0f8}((Colors.color_names["gray48"] ./ 255)...,))
COLORS[Integer(SI.COLOR_INDEX_SLIDER_INDICATOR_HOT)] = BinaryTransparentColor(CT.RGBA{FPN.N0f8}((Colors.color_names["gray48"] ./ 255)...,))
COLORS[Integer(SI.COLOR_INDEX_SLIDER_INDICATOR_ACTIVE)] = BinaryTransparentColor(CT.RGBA{FPN.N0f8}((Colors.color_names["gray48"] ./ 255)...,))

# Image
COLORS[Integer(SI.COLOR_INDEX_IMAGE_BORDER_NEUTRAL)] = COLORS[Integer(SI.COLOR_INDEX_BORDER)]
COLORS[Integer(SI.COLOR_INDEX_IMAGE_BORDER_HOT)] = COLORS[Integer(SI.COLOR_INDEX_BORDER)]
COLORS[Integer(SI.COLOR_INDEX_IMAGE_BORDER_ACTIVE)] = COLORS[Integer(SI.COLOR_INDEX_BORDER)]
